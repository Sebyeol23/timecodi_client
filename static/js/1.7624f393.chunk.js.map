{"version":3,"sources":["app/groups/group-timetable/components/Modal.js","app/groups/group-timetable/components/MeetingInfoModal.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/readOnlyError.js","app/groups/group-timetable/components/Dates.js","app/groups/group-timetable/components/Timeslot.js","app/groups/group-timetable/components/AdminBox.js","app/groups/group-timetable/components/Head.js","app/groups/group-timetable/components/Body.js","app/groups/group-timetable/Main.js","app/groups/group-timetable/components/TimeTableHeader.js","app/groups/group-timetable/components/Time-table.js","app/groups/GroupCalContext.js"],"names":["styled","div","textarea","Table","table","Form","Header","MeetingInfoModal","props","meetingInfo","setOpenModal","undefined","name","Error","edatetime","gid","loc_detail","location","meetid","memo","sdatetime","title","type","className","onClick","Container","map","info","index","key","style","fontWeight","li","DateNum","idx","lastDate","firstDate","TodayCSS","span","findToday","ScrollDiv","MeetingTitle","Dates","elm","month","year","holiday","useState","openModal","onDoubleClick","list","Slot","Slot2","EmptySlot","Timeslot","list_for_timeslot","Array","from","length","_","i","time","toFixed","slots","setSlots","useEffect","updatedSlots","slot","match","find","s","SlotComponent","id","AdminBox","isAdmin","totalDate","today","setShow","members","handleShow","height","overflowY","overflowX","el","cursor","userId","data","uid","axios","put","headers","Authorization","localStorage","getItem","then","response","alert","catch","err","detail","transferAdmin","console","log","delete","success","kickOut","class","msg","withdrawGroup","deleteGroup","section","Nav","Month","Year","BtnBox","Btn","width","Days","Day","MONTHS","DAY","Head","goToday","setMonth","parseInt","url","Form2","ViewWeek","button","Body","fetchGroupCal","groupCal","meetingList","indexOf","setHoliday","getMonth","Date","runAxios","a","get","requestOptions","res","lastDatesOfWeek","Map","meetingMap","setMeetingMap","getEvtFromMap","evtList","date","String","padStart","has","newEvtMap","forEach","evt","sdate","split","edate","push","set","currentDate","dateKey","toISOString","some","e","cid","setDate","getDate","populateEvtMap","viewWeekActive","setViewWeekActive","setGroupWeeklyCal","handleViewWeek","enddate","startdate","getFullYear","newList","setItem","JSON","stringify","method","redirect","last","margin","item","Math","ceil","value","Main","DATE","YEAR","MONTH","setTotalDate","changeDate","PVLastDate","PVLastDay","getDay","ThisLasyDay","ThisLasyDate","PVLD","unshift","TLD","TD","keys","slice","concat","setToday","useContext","GroupCalContext","TODAY","goMonth","TimetableHeader","startDate","endDate","dayofWeek","HeaderForm","TimeTable","iter_for_timeslot","useCallback","sundayList","mondayList","tuesdayList","wednesdayList","thursdayList","fridayList","saturdayList","element","dayOfWeek","Number","timeSlot","toString","useMemo","groupCal_dict","first_list","first_value","Object","first_slots","second_list","second_value","second_slots","third_list","third_value","third_slots","React","createContext"],"mappings":"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","file":"static/js/1.7624f393.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\n\nconst Modal = (props) => {\n  const {\n    elm,\n    month,\n    year,\n    startDate,\n    endDate,\n    registEvent,\n    setOpenModal,\n    userInput,\n    setUserInput,\n  } = props;\n\n  const userText = (e) => {\n    let date = `${month}` + `${elm}`;\n\n    setUserInput(`${date}_` + e.target.value);\n  };\n\n  return (\n    <Form>\n      <Header>Input Schedule</Header>\n      <ViewDate>\n        Date: {year}.{month}.{elm}\n      </ViewDate>\n      <StartDate>\n        startDate: {year}.{month}.{elm}\n      </StartDate>\n      <EndDate>\n        endDate: {year}.{month}.{elm}\n\n      </EndDate>\n      <Events>\n        <Contexts\n          placeholder=\"  Enter your schedule.\"\n          onChange={(e) => {\n            userText(e);\n          }}\n        >\n\n        </Contexts>\n        <RegistBtn\n          onClick={() => {\n            registEvent(userInput);\n          }}\n        >\n          ADD\n        </RegistBtn>\n        <Close\n          onClick={() => {\n            setOpenModal(false);\n          }}\n        >\n          CLOSE\n        </Close>\n      </Events>\n\n\n    </Form>\n  );\n};\n\nconst Form = styled.div`\n  position: absolute;\n  width: 20vw;\n  height: 10vw;\n  border-radius: 10px;\n  background-color: #f2edf3;\n  text-align: left;\n  color: black;\n  z-index: 999;\n`;\nconst Header = styled.div`\n  padding: 1vw 0 0.5vw 1vw;\n  font-weight: 700;\n  border-bottom: 2px solid #d3d3d3;\n`;\n\nconst ViewDate = styled.div`\n  padding: 0.4vw 0 0.3vw 1vw;\n  border-bottom: 2px solid #d3d3d3;\n`;\nconst StartDate = styled.div`\n  padding: 0.4vw 0 0.3vw 1vw;\n  border-bottom: 2px solid #d3d3d3;\n`;\nconst EndDate = styled.div`\n  padding: 0.4vw 0 0.3vw 1vw;\n  border-bottom: 2px solid #d3d3d3;\n`;\nconst Events = styled.div``;\nconst Contexts = styled.textarea`\n  background-color: #f2edf3;\n  padding: 1vw 0 0 0.5vw;\n  width: 100%;\n  border: none;\n  height: 6vw;\n  border-radius: 10px;\n`;\nconst RegistBtn = styled.div`\n  position: relative;\n  margin: 0.4vw 0.9vw;\n  padding: 0.3vw;\n  width: 3vw;\n  left: 0;\n  bottom: 3vw;\n  font-size: 0.9rem;\n  font-weight: 600;\n  background-color: #d3d3d3;\n  border-radius: 5px;\n  text-align: center;\n  cursor: pointer;\n\n`;\n\nconst Close = styled.div`\n  position: relative;\n  margin: 0.4vw 0.9vw;\n  padding: 0.3vw;\n  width: 4vw;\n  left: 14.5vw;\n  bottom: 5.1vw;\n  font-size: 0.9rem;\n  font-weight: 600;\n  background-color: #d3d3d3;\n  border-radius: 5px;\n  text-align: center;\n  cursor: pointer;\n  z-index: 999;\n`;\nconst InputCss = styled.div`\n  position: absolute;\n  margin: 0.4vw 0.9vw;\n  padding: 0.3vw;\n  width: 15vw;\n  right: 0;\n  bottom: 0;\n  font-size: 0.9rem;\n  font-weight: 600;\n  background-color: #d3d3d3;\n  border-radius: 5px;\n  text-align: center;\n  cursor: pointer;\n\n`;\nexport default Modal;\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst MeetingInfoModal = (props) => {\r\n  const { meetingInfo, setOpenModal } = props;\r\n  const emptyMeetingInfo = [\r\n    {\r\n      edatetime: \"\",\r\n      gid: 0,\r\n      loc_detail: \"\",\r\n      location: \"\",\r\n      meetid: 0,\r\n      memo: \"\",\r\n      sdatetime: \"\",\r\n      title: \"No Meeting Info\",\r\n    },\r\n  ];\r\n\r\n  if (meetingInfo === undefined || meetingInfo === []) {\r\n    meetingInfo = emptyMeetingInfo;\r\n  }\r\n\r\n  return (\r\n    <Form>\r\n      <Header>\r\n        <h4>Meeting Info</h4>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-gradient-primary btn-sm\"\r\n          onClick={() => {\r\n            setOpenModal(false);\r\n          }}\r\n        >\r\n          CLOSE\r\n        </button>\r\n      </Header>\r\n      <Container>\r\n        {meetingInfo &&\r\n          meetingInfo.map((info, index) => {\r\n            return (\r\n              <Table className=\"table\" key={index}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Contents</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ fontWeight: \"bold\" }}>Title</td>\r\n                    <td>{info.title}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ fontWeight: \"bold\" }}>Start</td>\r\n                    <td>{info.sdatetime}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ fontWeight: \"bold\" }}>End</td>\r\n                    <td>{info.edatetime}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ fontWeight: \"bold\" }}>Location</td>\r\n                    <td>{info.location}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ fontWeight: \"bold\" }}>Location Detail</td>\r\n                    <td>{info.loc_detail}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ fontWeight: \"bold\" }}>Memo</td>\r\n                    <td>{info.memo}</td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            );\r\n          })}\r\n      </Container>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Table = styled.table`\r\n  margin-bottom: 10px;\r\n  td,\r\n  th {\r\n    padding: 5px;\r\n  }\r\n`;\r\n\r\nconst Form = styled.div`\r\n  position: absolute;\r\n  width: fit-content;\r\n  max-width: 30vw;\r\n  overflow: auto;\r\n  height: fit-content;\r\n  max-height: 30vw;\r\n  border-radius: 10px;\r\n  background-color: #f2edf3;\r\n  text-align: left;\r\n  color: black;\r\n  z-index: 999;\r\n`;\r\nconst Header = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 1vw;\r\n  font-weight: 700;\r\n  border-bottom: 2px solid #d3d3d3;\r\n`;\r\n\r\nexport default MeetingInfoModal;\r\n","export default function _readOnlyError(name) {\n  throw new Error(\"\\\"\" + name + \"\\\" is read-only\");\n}","import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Modal from \"./Modal\";\r\nimport MeetingInfoModal from \"./MeetingInfoModal\";\r\n\r\nconst Dates = (props) => {\r\n  const {\r\n    lastDate,\r\n    firstDate,\r\n    elm,\r\n    findToday,\r\n    month,\r\n    year,\r\n    idx,\r\n    meetingInfo,\r\n    holiday,\r\n  } = props;\r\n\r\n  // meetingInfo 빈 배열일 가능성이 높음\r\n\r\n  const [userInput, setUserInput] = useState({});\r\n  const [evtList, setEvtList] = useState([]);\r\n  const [openModal, setOpenModal] = useState(false);\r\n  let dateKey = `${month}` + `${elm}`;\r\n  const registEvent = (value) => {\r\n    setEvtList([...evtList, value]);\r\n    setUserInput(\"\");\r\n    setOpenModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        onDoubleClick={() => {\r\n          setOpenModal(true);\r\n        }}\r\n      >\r\n        <DateNum\r\n          idx={idx}\r\n          lastDate={lastDate}\r\n          firstDate={firstDate}\r\n          findToday={findToday}\r\n        >\r\n          {/* <TodayCSS findToday={findToday}>{elm}</TodayCSS>일 */}\r\n\r\n          <TodayCSS findToday={findToday}>{elm}</TodayCSS>\r\n        </DateNum>\r\n        {openModal && (\r\n          <MeetingInfoModal\r\n            setOpenModal={setOpenModal}\r\n            meetingInfo={meetingInfo ? meetingInfo : []}\r\n          ></MeetingInfoModal>\r\n        )}\r\n        {meetingInfo && meetingInfo !== [] && (\r\n          <ScrollDiv>\r\n            {meetingInfo.map((list, index) => {\r\n              return <MeetingTitle key={index}>{list.title}</MeetingTitle>;\r\n            })}\r\n          </ScrollDiv>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\nconst Form = styled.li`\r\n  position: relative;\r\n  padding: 0 0px 0 0.6em;\r\n  width: 4.1em;\r\n  height: 4.1em;\r\n  text-align: left;\r\n  border-bottom: 1px solid #e4e3e6;\r\n  border-left: 1px solid #e4e3e6;\r\n  list-style: none;\r\n  font-size: 1.1rem;\r\n  :nth-child(7n + 1),\r\n  :nth-child(7n) {\r\n    color: #969696;\r\n    // background-color: #f5f5f5;\r\n  }\r\n`;\r\n\r\nconst DateNum = styled.div`\r\n  padding: 0.5em 0.6em 0 0;\r\n  font-size: 1em;\r\n  color: black;\r\n\r\n  ${(props) => props.idx < props.lastDate && `color: #969696;`};\r\n\r\n  ${(props) =>\r\n    props.firstDate > 0 &&\r\n    props.idx > props.firstDate - 1 &&\r\n    `\r\n    color: #969696;\r\n  `};\r\n`;\r\n\r\nconst TodayCSS = styled.span`\r\n  ${(props) =>\r\n    props.findToday &&\r\n    props.idx >= props.lastDate &&\r\n    props.idx <= props.firstDate &&\r\n    ` position: relative;\r\n    padding: 7px;\r\n    // border-radius: 50%;\r\n    font-size: 12px;\r\n    font-weight: 700;\r\n    color: #fe7c96;\r\n    // background-color:#fe7c96;\r\n `}\r\n`;\r\nconst ScrollDiv = styled.div`\r\n  overflow: auto;\r\n  height: 7.2em;\r\n  &::-webkit-scrollbar {\r\n    width: 0.48em;\r\n    height: 0.48em;\r\n    border-radius: 0.3em;\r\n    background: rgba(255, 255, 255, 0.4);\r\n  }\r\n  &::-webkit-scrollbar-thumb {\r\n    background: rgba(0, 0, 0, 0.3);\r\n    border-radius: 0.3em;\r\n  }\r\n`;\r\n\r\nconst MeetingTitle = styled.div`\r\n  font-size: 0.8em;\r\n  color: #969696;\r\n`;\r\n\r\nexport default Dates;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Timeslot = (props) => {\r\n  const { list_for_timeslot } = props; // [{time: 8.0, className: avail-first}, ... ]\r\n  const [slots, setSlots] = useState(\r\n    Array.from({ length: 32 }, (_, i) => ({\r\n      time: (8 + i * 0.5).toFixed(1),\r\n      className: \"\",\r\n    }))\r\n  );\r\n\r\n  useEffect(() => {\r\n    // Update with classes from list_for_timeslot\r\n    if (list_for_timeslot) {\r\n      const updatedSlots = slots.map((slot) => {\r\n        const match = list_for_timeslot.find((s) => s.time === slot.time);\r\n        return match ? match : { ...slot, className: \"\" };\r\n      });\r\n      setSlots(updatedSlots);\r\n    }\r\n  }, [list_for_timeslot]);\r\n\r\n  return (\r\n    <Form>\r\n      <EmptySlot />\r\n      {slots.map((elm, index) => {\r\n        const SlotComponent = index % 2 === 0 ? Slot : Slot2;\r\n        return (\r\n          <SlotComponent\r\n            key={elm.time}\r\n            id={elm.time}\r\n            className={elm.className}\r\n          ></SlotComponent>\r\n        );\r\n      })}\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\nconst Slot = styled.div`\r\n  position: relative;\r\n  width: 58px;\r\n  height: 13px;\r\n  border: 1px solid #bb7aff;\r\n  border-bottom: 1px dotted #bb7aff;\r\n  text-align: left;\r\n  z-index: 999;\r\n  background-color: #f8f8f8;\r\n  &.avail-first {\r\n    background-color: #cc9fff;\r\n  }\r\n  &.avail-second {\r\n    background-color: #e0c5ff;\r\n  }\r\n  &.avail-third {\r\n    background-color: #f0e2ff;\r\n  }\r\n`;\r\nconst Slot2 = styled.div`\r\n  position: relative;\r\n  width: 58px;\r\n  height: 13px;\r\n  border: 1px solid #bb7aff;\r\n  border-top: none;\r\n  text-align: left;\r\n  color: black;\r\n  z-index: 999;\r\n  background-color: #f8f8f8;\r\n  &.avail-first {\r\n    background-color: #cc9fff;\r\n  }\r\n  &.avail-second {\r\n    background-color: #e0c5ff;\r\n  }\r\n  &.avail-third {\r\n    background-color: #f0e2ff;\r\n  }\r\n`;\r\nconst EmptySlot = styled.div`\r\n  position: relative;\r\n  width: 43px;\r\n  height: 14px;\r\n  z-index: 999;\r\n`;\r\n\r\nexport default Timeslot;\r\n\r\n/* \r\n<Slot id=\"8.0\"></Slot>\r\n      <Slot2 id=\"8.5\"></Slot2>\r\n      <Slot id=\"9.0\"></Slot>\r\n      <Slot2 id=\"9.5\"></Slot2>\r\n      <Slot id=\"10.0\"></Slot>\r\n      <Slot2 id=\"10.5\"></Slot2>\r\n      <Slot id=\"11.0\"></Slot>\r\n      <Slot2 id=\"11.5\"></Slot2>\r\n      <Slot id=\"12.0\"></Slot>\r\n      <Slot2 id=\"12.5\"></Slot2>\r\n      <Slot id=\"13.0\"></Slot>\r\n      <Slot2 id=\"13.5\"></Slot2>\r\n      <Slot id=\"14.0\"></Slot>\r\n      <Slot2 id=\"14.5\"></Slot2>\r\n      <Slot id=\"15.0\"></Slot>\r\n      <Slot2 id=\"15.5\"></Slot2>\r\n      <Slot id=\"16.0\"></Slot>\r\n      <Slot2 id=\"16.5\"></Slot2>\r\n      <Slot id=\"17.0\"></Slot>\r\n      <Slot2 id=\"17.5\"></Slot2>\r\n      <Slot id=\"18.0\"></Slot>\r\n      <Slot2 id=\"18.5\" className=\"avail-first\"></Slot2>\r\n      <Slot id=\"19.0\" className=\"avail-first\"></Slot>\r\n      <Slot2 id=\"19.5\" className=\"avail-first\"></Slot2>\r\n      <Slot id=\"20.0\" className=\"avail-second\"></Slot>\r\n      <Slot2 id=\"20.5\" className=\"avail-second\"></Slot2>\r\n      <Slot id=\"21.0\" className=\"avail-second\"></Slot>\r\n      <Slot2 id=\"21.5\" className=\"avail-second\"></Slot2>\r\n      <Slot id=\"22.0\" className=\"avail-third\"></Slot>\r\n      <Slot2 id=\"22.5\" className=\"avail-third\"></Slot2>\r\n      <Slot id=\"23.0\" className=\"avail-third\"></Slot>\r\n      <Slot2 id=\"23.5\" className=\"avail-third\"></Slot2>\r\n      <Slot id=\"24.0\"></Slot>\r\n      <Slot2 id=\"24.5\"></Slot2>\r\n      <Slot id=\"25.0\"></Slot>\r\n      <Slot2 id=\"25.5\"></Slot2>\r\n*/\r\n","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Dates from './Dates';\r\nimport axios from 'axios';\r\n\r\nfunction AdminBox(props) {\r\n  const gid = props.gid;\r\n  const isAdmin = props.isAdmin;\r\n\r\n  const { totalDate, today, month, year } = props;\r\n\r\n  const [show, setShow] = useState(false);\r\n\r\n  // let members = [\"David Grey\",\"David Grey\",\"David Grey\", \"Stella Johnson\",\"Stella Johnson\",\"Stella Johnson\", \"Marina Michel\", \"John Doe\"];\r\n  // let [memberList] = useState(members);\r\n  let members = props.members;\r\n\r\n  const [addShow, setAddShow] = useState(false);\r\n  const addClose = () => setAddShow(!addShow);\r\n  const handleShow = () => setShow(true);\r\n\r\n  //today\r\n\r\n  const requestOptions = {\r\n    method: 'GET',\r\n    redirect: 'follow',\r\n    headers: {\r\n      'Access-Control-Allow-Origin': '*',\r\n      'Access-Control-Allow-Headers': 'Content-Type',\r\n      'Access-Control-Allow-Methods': 'OPTIONS,POST,GET',\r\n    },\r\n  };\r\n\r\n  const transferAdmin = (userId) => {\r\n    const data = { gid: gid, uid: userId };\r\n    axios\r\n      .put(\r\n        \"https://port-0-timecodi-416cq2mlg8dr0qo.sel3.cloudtype.app/admin\", data,\r\n        {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        alert(\"transfer!\")\r\n      })\r\n      .catch((err) => {\r\n        alert(err.response.data.detail);\r\n      });\r\n  }\r\n\r\n  const kickOut = (userId) => {\r\n    const data = { gid: gid, uid: userId };\r\n    console.log(data);\r\n    axios\r\n      .delete(\r\n        \"https://port-0-timecodi-416cq2mlg8dr0qo.sel3.cloudtype.app/admin\",\r\n        {\r\n          data: data,\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        alert(response.data.success);\r\n      })\r\n      .catch((err) => {\r\n        alert(err.response.data.detail);\r\n      });\r\n  }\r\n\r\n  const withdrawGroup = (gid) => {\r\n    const data = { gid: gid };\r\n    axios\r\n      .delete(\r\n        \"https://port-0-timecodi-416cq2mlg8dr0qo.sel3.cloudtype.app/member\",\r\n        {\r\n          data: data,\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        alert(response.data.msg);\r\n      })\r\n      .catch((err) => {\r\n        alert(err.response.data.detail);\r\n      });\r\n  }\r\n\r\n  const deleteGroup = (gid) => {\r\n    const data = { gid: gid };\r\n    axios\r\n      .delete(\r\n        \"https://port-0-timecodi-416cq2mlg8dr0qo.sel3.cloudtype.app/group\",\r\n        {\r\n          data: data,\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((response) => {\r\n        alert(response.data.msg);\r\n      })\r\n      .catch((err) => {\r\n        alert(\"err!\");\r\n      });\r\n  }\r\n\r\n  if (isAdmin) {\r\n    return (\r\n\r\n      <div className=\"col-12 grid-margin stretch-card\" style={{ 'padding': '0vw 0vw', 'margin': '1.3vw' }}>\r\n        <div className=\"card row\" style={{\r\n          height: \"500px\",\r\n\r\n        }}>\r\n          <div className=\"col-md-6\" >\r\n            <h4 className=\"card-title\" style={{\r\n              \"margin\": '2.5vw 0 0 2.5vw',\r\n            }}>\r\n              <i className=\"mdi mdi-settings\"></i> &nbsp;Admin\r\n            </h4>\r\n\r\n            <div className=\"card-body\" style={{\r\n              height: \"400px\",\r\n              overflowY: \"auto\",\r\n              overflowX: \"hidden\",\r\n            }}>\r\n              {/* <p className=\"card-description\">Click member's name</p> */}\r\n              <div className=\"table-responsive\" >\r\n                <table className=\"table\">\r\n                  <tr style={{ \"text-align\": 'center' }}>\r\n                    <th style={{ \"width\": '15vw' }}> Name </th>\r\n                    <th style={{ \"width\": '20vw' }}> ID </th>\r\n                    <th style={{ \"width\": '35vw' }}> Actions </th>\r\n                  </tr>\r\n                  <tbody>\r\n\r\n                    {members.map(function (el, idx) {\r\n                      return (\r\n                        <tr style={{ \"text-align\": 'center' }}>\r\n                          <td\r\n                            onClick={handleShow}\r\n                            style={{ cursor: \"pointer\" }}\r\n                          >\r\n                            {el.name}\r\n                          </td>\r\n                          <td\r\n                            onClick={handleShow}\r\n                            style={{ cursor: \"pointer\" }}\r\n                          >\r\n                            {el.id}\r\n                          </td>\r\n                          <td>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-inverse-info btn-sm\"\r\n                              onClick={() => { transferAdmin(el.id) }}\r\n                            >\r\n                              Transfer Admin\r\n                            </button>\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn btn-inverse-danger btn-sm\"\r\n                              onClick={() => { kickOut(el.id) }}\r\n                            >\r\n                              Kick out\r\n                            </button>\r\n                          </td>\r\n                        </tr>\r\n\r\n\r\n                      );\r\n                    })}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div className=\"col-md-6\" >\r\n            <h4 className=\"card-title\" style={{\r\n              \"margin\": '2.5vw 0 0 2.5vw', 'color': '#FA5C7D'\r\n            }}>\r\n              <i class=\"mdi mdi-alert btn-icon-prepend\"></i>&nbsp;Danger Zone </h4>\r\n            <div className=\"card-body\" >\r\n              <p className=\"card-description\" style={{ \"padding\": '0.2vw 1vw 0vw 0', \"text-align\": 'left' }}>I hope you know what you are doing..\r\n                Next actions are irreversible.<br></br>If you leave the group without transferring the Admin to another member,\r\n                the member who joined the group first among the remaining people will gain the Admin's authority.</p>\r\n              <div style={{ \"margin\": '0 5vw' }}>\r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-rounded btn-sm\" onClick={() => { withdrawGroup(gid) }}>Withdraw from group</button>\r\n                <button type=\"button\" className=\"btn btn-outline-danger btn-rounded btn-sm\" onClick={() => { deleteGroup(gid) }}>Delete group</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  else {\r\n    return null;\r\n  }\r\n};\r\n\r\n\r\nexport default AdminBox;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Head = (props) => {\r\n  const { year, month, goToday, setMonth } = props;\r\n\r\n  return (\r\n    <Form>\r\n      <Nav>\r\n        <div className=\"row\">\r\n          <Month>\r\n            {MONTHS[(12000+month - 1)%12]}\r\n          </Month>\r\n          <Year>\r\n            {(month+12000-1)%12+1} / {parseInt((year*12+month-1)/12)} \r\n          </Year>\r\n\r\n          <BtnBox>\r\n            <div className=\"row\">\r\n\r\n              <Btn onClick={() => setMonth(month - 1)} >&lt;</Btn>\r\n              <Btn width=\"4vw\" onClick={() => goToday()}>TODAY</Btn>\r\n              <Btn onClick={() => setMonth(month + 1)}>&gt;</Btn>\r\n            </div>\r\n          </BtnBox>\r\n        </div>\r\n\r\n      </Nav>\r\n      <Days>\r\n        {DAY.map((elm, idx) => {\r\n          return <Day key={idx}>{elm}</Day>;\r\n        })}\r\n      </Days>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst Form = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 32em;\r\n  height: 6.5em;\r\n  border: 0.1em solid #e4e3e6;\r\n  border-radius: 0.2em;\r\n  margin: 0.5em 0 0 0.4em;\r\n`;\r\nconst Nav = styled.section`\r\n  margin:0.65em;\r\n`;\r\nconst Month = styled.div`\r\n  font-size: 2rem;\r\n  font-weight: 700;\r\n  position: relative;\r\n  left: 1.8em;\r\n  top: 0.4em;\r\n`;\r\nconst Year = styled.div`\r\n  font-size: 1.0rem;\r\n  font-weight: 200;\r\n  position: relative;\r\n  left: 4em;\r\n  top: 1.5em;\r\n`;\r\nconst BtnBox = styled.div`\r\n  margin: 1.5em 0 0 0.5em;\r\n  position: absolute;\r\n  right: 5em;\r\n\r\n\r\n`;\r\nconst Btn = styled.li`\r\n  padding: 3px 3px 3px;\r\n  width: ${(props) => {\r\n    return props.width || '22px';\r\n  }};\r\n  border: 0.5px solid #e4e3e6;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  font-size: 0.8rem;\r\n  cursor: pointer;\r\n  position: relative;\r\n  right: 0px;\r\n  list-style: none;\r\n\r\n`;\r\n\r\nconst Days = styled.div`\r\n  display: flex;\r\n  margin: 1em 0 0.2em ;\r\n  position: relative;\r\n`;\r\nconst Day = styled.li`\r\n\r\n  width: 4.5em;\r\n  text-align: center;\r\n  list-style: none;\r\n  position: relative;\r\n\r\n  :nth-child(7n + 1),\r\n  :nth-child(7n) {\r\n    color: #969696;\r\n  }\r\n`;\r\n\r\nconst MONTHS = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\r\n\r\nconst DAY = ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'];\r\nexport default Head;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Dates from \"./Dates\";\r\nimport axios from \"axios\";\r\n\r\nconst realURL = \"https://port-0-timecodi-416cq2mlg8dr0qo.sel3.cloudtype.app\";\r\nconst localURL = \"https://127.0.0.1:8000\";\r\nconst url = realURL;\r\n\r\nfunction Body(props) {\r\n  const {\r\n    totalDate,\r\n    today,\r\n    month,\r\n    year,\r\n    gid,\r\n    groupCal,\r\n    fetchGroupCal,\r\n    meetingList,\r\n  } = props;\r\n  const lastDate = totalDate.indexOf(1);\r\n  const firstDate = totalDate.indexOf(1, 7);\r\n\r\n  const [holiday, setHoliday] = useState([0]);\r\n\r\n  //today\r\n  const findToday = totalDate.indexOf(today);\r\n  const getMonth = new Date().getMonth() + 1;\r\n  const runAxios = async () => {\r\n    try {\r\n      const res = await axios.get(\r\n        `http://localhost:8000/?solYear=${year}&solMonth=${month}`,\r\n        requestOptions\r\n      );\r\n      console.log(res.data);\r\n      setHoliday(res.data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  let viewButtons5 = [1, 2, 3, 4, 5];\r\n  let viewButtons6 = [1, 2, 3, 4, 5, 6];\r\n  let lastDatesOfWeek = [];\r\n\r\n  let [meetingMap, setMeetingMap] = useState(new Map()); // key: date, value: meetingInfo\r\n  const populateEvtMap = (meetingList) => {\r\n    const newEvtMap = new Map();\r\n\r\n    meetingList.forEach((evt) => {\r\n      if (evt.sdatetime !== undefined && evt.edatetime !== undefined) {\r\n        let sdate = evt.sdatetime.split(\"T\")[0];\r\n        let edate = evt.edatetime.split(\"T\")[0];\r\n\r\n        if (newEvtMap.has(sdate)) {\r\n          newEvtMap.get(sdate).push(evt);\r\n        } else {\r\n          newEvtMap.set(sdate, [evt]);\r\n        }\r\n\r\n        if (sdate !== edate) {\r\n          let currentDate = new Date(sdate);\r\n          const lastDate = new Date(edate);\r\n\r\n          while (currentDate <= lastDate) {\r\n            let dateKey = currentDate.toISOString().split(\"T\")[0];\r\n            if (!newEvtMap.has(dateKey)) {\r\n              newEvtMap.set(dateKey, [evt]);\r\n            } else if (!newEvtMap.get(dateKey).some((e) => e.cid === evt.cid)) {\r\n              newEvtMap.get(dateKey).push(evt);\r\n            }\r\n            currentDate.setDate(currentDate.getDate() + 1);\r\n          }\r\n        }\r\n      }\r\n    });\r\n    setMeetingMap(newEvtMap);\r\n    console.log(meetingMap);\r\n  };\r\n\r\n  useEffect(() => {\r\n    populateEvtMap(meetingList);\r\n  }, [meetingList]);\r\n\r\n  function getEvtFromMap(year, month, elm) {\r\n    let evtList = [];\r\n    const date = `${year}-${String(month).padStart(2, \"0\")}-${String(\r\n      elm\r\n    ).padStart(2, \"0\")}`;\r\n    if (meetingMap.has(date)) {\r\n      evtList = meetingMap.get(date);\r\n    }\r\n    return evtList;\r\n  }\r\n\r\n  const [viewWeekActive, setViewWeekActive] = useState(\"unactive\");\r\n  const [groupWeeklyCal, setGroupWeeklyCal] = useState([]);\r\n  const handleViewWeek = (idx) => {\r\n    setViewWeekActive(idx);\r\n    console.log(`ViewWeek ${idx} clicked`);\r\n    console.log(lastDatesOfWeek[idx]);\r\n\r\n    // form of 2023-01-01\r\n    let year = lastDatesOfWeek[idx].year;\r\n    let month = lastDatesOfWeek[idx].month;\r\n    let date = lastDatesOfWeek[idx].date;\r\n    if (date < 7 && idx > 3) {\r\n      month += 1;\r\n    }\r\n    let enddate = `${year}-${month < 10 ? `0${month}` : month}-${\r\n      date < 10 ? `0${date}` : date\r\n    }`;\r\n    console.log(enddate);\r\n\r\n    // startdate is 6 days before enddate\r\n    let startdate = new Date(enddate);\r\n    startdate.setDate(startdate.getDate() - 6);\r\n    startdate = `${startdate.getFullYear()}-${\r\n      startdate.getMonth() + 1 < 10\r\n        ? `0${startdate.getMonth() + 1}`\r\n        : startdate.getMonth() + 1\r\n    }-${\r\n      startdate.getDate() < 10 ? `0${startdate.getDate()}` : startdate.getDate()\r\n    }`;\r\n    console.log(startdate);\r\n\r\n    // get weekly group calendar\r\n    axios\r\n      .get(\r\n        `${url}/weeklygroupcal?gid=${gid}&start_date=${startdate}&end_date=${enddate}`,\r\n        {\r\n          headers: {\r\n            Authorization: localStorage.getItem(\"token\"),\r\n          },\r\n        }\r\n      )\r\n      .then((res) => {\r\n        console.log(res.data);\r\n        let newList = [];\r\n        newList.push(res.data);\r\n        setGroupWeeklyCal(newList[0]);\r\n        localStorage.setItem(\"groupWeeklyCal\", JSON.stringify(newList[0]));\r\n        fetchGroupCal();\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"get group weekly calender\");\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const requestOptions = {\r\n    method: \"GET\",\r\n    redirect: \"follow\",\r\n    headers: {\r\n      \"Access-Control-Allow-Origin\": \"*\",\r\n      \"Access-Control-Allow-Headers\": \"Content-Type\",\r\n      \"Access-Control-Allow-Methods\": \"OPTIONS,POST,GET\",\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    runAxios();\r\n  }, [month]);\r\n\r\n  return (\r\n    <>\r\n      <Form>\r\n        {totalDate.map((elm, idx) => {\r\n          if (idx % 7 == 6) {\r\n            // 이 인덱스 = viewWeek 버튼의 인덱스 = lastDatesOfWeek 배열의 인덱스\r\n            let last = { idx: idx, year: year, month: month, date: elm };\r\n            lastDatesOfWeek.push(last);\r\n          }\r\n          return (\r\n            <div>\r\n              {idx % 7 == 6 ? (\r\n                <div className=\"row\" style={{ margin: \"0 0 0 0\" }}>\r\n                  <Dates\r\n                    key={idx}\r\n                    idx={idx}\r\n                    lastDate={lastDate}\r\n                    firstDate={firstDate}\r\n                    elm={elm}\r\n                    findToday={\r\n                      findToday === idx && month === getMonth && findToday\r\n                    }\r\n                    month={month}\r\n                    year={year}\r\n                    holiday={holiday.item}\r\n                  ></Dates>\r\n                </div>\r\n              ) : (\r\n                <Dates\r\n                  key={idx}\r\n                  idx={idx}\r\n                  lastDate={lastDate}\r\n                  firstDate={firstDate}\r\n                  elm={elm}\r\n                  findToday={\r\n                    findToday === idx && month === getMonth && findToday\r\n                  }\r\n                  month={month}\r\n                  year={year}\r\n                  holiday={holiday.item}\r\n                  meetingInfo={getEvtFromMap(year, month, elm)}\r\n                ></Dates>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </Form>\r\n      <Form2>\r\n        <>\r\n          {Math.ceil(totalDate.length / 7) === 5\r\n            ? viewButtons5.map((item, idx) => {\r\n                return (\r\n                  <>\r\n                    <ViewWeek\r\n                      value={idx}\r\n                      className={idx == viewWeekActive ? \"active\" : \"unactive\"}\r\n                      onClick={() => handleViewWeek(idx)}\r\n                    ></ViewWeek>\r\n                  </>\r\n                );\r\n              })\r\n            : viewButtons6.map((item, idx) => {\r\n                return (\r\n                  <>\r\n                    <ViewWeek\r\n                      value={idx}\r\n                      className={idx == viewWeekActive ? \"active\" : \"unactive\"}\r\n                      onClick={() => handleViewWeek(idx)}\r\n                    ></ViewWeek>\r\n                  </>\r\n                );\r\n              })}\r\n        </>\r\n      </Form2>\r\n    </>\r\n  );\r\n}\r\n\r\nconst Form = styled.div`\r\n  position: absolute;\r\n\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  margin: 0 0 0 0.4em;\r\n  width: 32em;\r\n`;\r\nconst Form2 = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  flex-flow: row wrap;\r\n  width: 1em;\r\n  margin-left: 31.5em;\r\n`;\r\n\r\nconst ViewWeek = styled.button`\r\n  position: relative;\r\n  padding: 0 0px 0 10px;\r\n  width: 7px;\r\n  height: 72px;\r\n  text-align: left;\r\n  border: 2px solid #fcd4ec;\r\n  border-radius: 2px;\r\n  list-style: none;\r\n  background: #ffe5ea;\r\n  z-index: 999;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background: #fea3b6;\r\n    border: 2px solid #fea3b6;\r\n  }\r\n  &.active {\r\n    background: #fea3b6;\r\n    border: 2px solid #fea3b6;\r\n  }\r\n`;\r\n\r\nexport default Body;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Head from \"./components/Head\";\r\nimport Body from \"./components/Body\";\r\nimport GroupCalContext from \"../GroupCalContext\";\r\n\r\nconst Main = (props) => {\r\n  let DATE = new Date();\r\n  const YEAR = DATE.getFullYear();\r\n  const MONTH = DATE.getMonth() + 1;\r\n\r\n  const [month, setMonth] = useState(MONTH);\r\n  const [year, setYear] = useState(YEAR);\r\n  const [totalDate, setTotalDate] = useState([]);\r\n\r\n  const changeDate = (month) => {\r\n    //이전 날짜\r\n    let PVLastDate = new Date(YEAR, month - 1, 0).getDate();\r\n    let PVLastDay = new Date(YEAR, month - 1, 0).getDay();\r\n    //다음 날짜\r\n    const ThisLasyDay = new Date(YEAR, month, 0).getDay();\r\n    const ThisLasyDate = new Date(YEAR, month, 0).getDate();\r\n\r\n    //이전 날짜 만들기\r\n    let PVLD = [];\r\n    if (PVLastDay !== 6) {\r\n      for (let i = 0; i < PVLastDay + 1; i++) {\r\n        PVLD.unshift(PVLastDate - i);\r\n      }\r\n    }\r\n    //다음 날짜 만들기\r\n    let TLD = [];\r\n    for (let i = 1; i < 7 - ThisLasyDay; i++) {\r\n      if (i === 0) {\r\n        return TLD;\r\n      }\r\n      TLD.push(i);\r\n    }\r\n\r\n    //현재날짜\r\n    let TD = [];\r\n\r\n    TD = [...Array(ThisLasyDate + 1).keys()].slice(1);\r\n\r\n    return PVLD.concat(TD, TLD);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTotalDate(changeDate(7));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTotalDate(changeDate(month));\r\n  }, [month]);\r\n\r\n  const [today, setToday] = useState(0);\r\n\r\n  const goToday = () => {\r\n    let TODAY = new Date().getDate();\r\n    let goMonth = new Date().getMonth() + 1;\r\n    setMonth(goMonth);\r\n    setToday(TODAY);\r\n  };\r\n\r\n  const { groupCal, fetchGroupCal } = useContext(GroupCalContext);\r\n\r\n  return (\r\n    <div>\r\n      <Head year={year} month={month} setMonth={setMonth} goToday={goToday} />\r\n      <Body\r\n        totalDate={totalDate}\r\n        today={today}\r\n        month={month}\r\n        year={year}\r\n        gid={props.gid}\r\n        groupCal={groupCal}\r\n        fetchGroupCal={fetchGroupCal}\r\n        meetingList={props.meetingList}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst TimetableHeader = (props) => {\r\n  const { startDate, endDate, dayofWeek } = props;\r\n\r\n  return (\r\n    <Form>\r\n      <Slot></Slot>\r\n      <Header>8:00</Header>\r\n      <Header>9:00</Header>\r\n      <Header>10:00</Header>\r\n      <Header>11:00</Header>\r\n      <Header>12:00</Header>\r\n      <Header>1:00</Header>\r\n      <Header>2:00</Header>\r\n      <Header>3:00</Header>\r\n      <Header>4:00</Header>\r\n      <Header>5:00</Header>\r\n      <Header>6:00</Header>\r\n      <Header>7:00</Header>\r\n      <Header>8:00</Header>\r\n      <Header>9:00</Header>\r\n      <Header>10:00</Header>\r\n      <Header>11:00</Header>\r\n      <Header>12:00</Header>\r\n      {/* <Header>1:00</Header>\r\n      <Header>2:00</Header> */}\r\n    </Form>\r\n  );\r\n};\r\nconst Form = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 448px;\r\n`;\r\nconst Slot = styled.div`\r\n  position: relative;\r\n  width: 43px;\r\n  height: 6px;\r\n  z-index: 999;\r\n`;\r\nconst Header = styled.div`\r\n  position: relative;\r\n  width: 65px;\r\n  height: 40px;\r\n  font-size: 13px;\r\n  padding-right: 4px;\r\n  text-align: right;\r\n  color: gray;\r\n  z-index: 999;\r\n`;\r\n\r\nexport default TimetableHeader;\r\n","import React, {\r\n  useState,\r\n  useEffect,\r\n  useContext,\r\n  useCallback,\r\n  useMemo,\r\n} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Timeslot from \"./Timeslot\";\r\nimport TimetableHeader from \"./TimeTableHeader\";\r\nimport GroupCalContext from \"./../../GroupCalContext\";\r\n\r\nconst TimeTable = (props) => {\r\n  const { startDate, endDate } = props;\r\n  const { groupCal } = useContext(GroupCalContext);\r\n\r\n  const iter_for_timeslot = useCallback((list, className) => {\r\n    let slots = {\r\n      sundayList: [],\r\n      mondayList: [],\r\n      tuesdayList: [],\r\n      wednesdayList: [],\r\n      thursdayList: [],\r\n      fridayList: [],\r\n      saturdayList: [],\r\n    };\r\n    list.forEach((element) => {\r\n      let dayOfWeek = element[1];\r\n      let [hour, minute] = element[2].split(\":\").map(Number);\r\n      let time = (hour + minute / 60).toFixed(1); // 08:30:00 to 8.5\r\n      let timeSlot = { time: time.toString(), className: className };\r\n\r\n      if (dayOfWeek === \"Sunday\") {\r\n        slots.sundayList.push(timeSlot);\r\n      } else if (dayOfWeek === \"Monday\") {\r\n        slots.mondayList.push(timeSlot);\r\n      } else if (dayOfWeek === \"Tuesday\") {\r\n        slots.tuesdayList.push(timeSlot);\r\n      } else if (dayOfWeek === \"Wednesday\") {\r\n        slots.wednesdayList.push(timeSlot);\r\n      } else if (dayOfWeek === \"Thursday\") {\r\n        slots.thursdayList.push(timeSlot);\r\n      } else if (dayOfWeek === \"Friday\") {\r\n        slots.fridayList.push(timeSlot);\r\n      } else if (dayOfWeek === \"Saturday\") {\r\n        slots.saturdayList.push(timeSlot);\r\n      }\r\n    }); // for loop\r\n    return slots;\r\n  }, []);\r\n\r\n  const {\r\n    sundayList,\r\n    mondayList,\r\n    tuesdayList,\r\n    wednesdayList,\r\n    thursdayList,\r\n    fridayList,\r\n    saturdayList,\r\n  } = useMemo(() => {\r\n    let slots = {\r\n      sundayList: [],\r\n      mondayList: [],\r\n      tuesdayList: [],\r\n      wednesdayList: [],\r\n      thursdayList: [],\r\n      fridayList: [],\r\n      saturdayList: [],\r\n    };\r\n    if (groupCal) {\r\n      const groupCal_dict = groupCal[0];\r\n      const first_list = groupCal_dict[\"first_list\"];\r\n      const first_key = Object.keys(first_list)[0]; // 1st list's possible number of people\r\n      const first_value = first_list[first_key]; // 1st list's available times: 2023-05-01 Monday 08:00:00\r\n      const first_slots = iter_for_timeslot(first_value, \"avail-first\");\r\n\r\n      const second_list = groupCal_dict[\"second_list\"];\r\n      const second_key = Object.keys(second_list)[0]; // 2nd list's possible number of people\r\n      const second_value = second_list[second_key]; // 2nd list's available times: 2023-05-01 Monday 08:00:00\r\n      const second_slots = iter_for_timeslot(second_value, \"avail-second\");\r\n\r\n      const third_list = groupCal_dict[\"third_list\"];\r\n      const third_key = Object.keys(third_list)[0]; // 3rd list's possible number of people\r\n      const third_value = third_list[third_key]; // 3rd list's available times: 2023-05-01 Monday 08:00:00\r\n      const third_slots = iter_for_timeslot(third_value, \"avail-third\");\r\n\r\n      for (let dayOfWeek in slots) {\r\n        slots[dayOfWeek] = [\r\n          ...first_slots[dayOfWeek],\r\n          ...second_slots[dayOfWeek],\r\n          ...third_slots[dayOfWeek],\r\n        ];\r\n      }\r\n    }\r\n    return slots;\r\n  }, [groupCal, iter_for_timeslot]);\r\n\r\n  return (\r\n    <div>\r\n      <HeaderForm>\r\n        <Header>SUN</Header>\r\n        <Header>MON</Header>\r\n        <Header>TUE</Header>\r\n        <Header>WED</Header>\r\n        <Header>THU</Header>\r\n        <Header>FRI</Header>\r\n        <Header>SAT</Header>\r\n      </HeaderForm>\r\n      <Form>\r\n        <TimetableHeader></TimetableHeader>\r\n        <Timeslot list_for_timeslot={sundayList}></Timeslot>\r\n        <Timeslot list_for_timeslot={mondayList}></Timeslot>\r\n        <Timeslot list_for_timeslot={tuesdayList}></Timeslot>\r\n        <Timeslot list_for_timeslot={wednesdayList}></Timeslot>\r\n        <Timeslot list_for_timeslot={thursdayList}></Timeslot>\r\n        <Timeslot list_for_timeslot={fridayList}></Timeslot>\r\n        <Timeslot list_for_timeslot={saturdayList}></Timeslot>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Form = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  position: relative;\r\n  list-style: none;\r\n  height: 432px;\r\n  border-radius: 10px;\r\n  text-align: left;\r\n  color: black;\r\n  z-index: 990;\r\n`;\r\nconst HeaderForm = styled.li`\r\n  display: flex;\r\n  flex-direction: row;\r\n  margin-top: 14px;\r\n  padding: 0px 0 0px 67px;\r\n  position: relative;\r\n  list-style: none;\r\n  height: 14px;\r\n  text-align: center;\r\n\r\n  z-index: 990;\r\n`;\r\n\r\nconst Header = styled.div`\r\n  position: relative;\r\n  width: 58px;\r\n  height: 14px;\r\n\r\n  text-align: center;\r\n  color: black;\r\n  z-index: 990;\r\n`;\r\n\r\nexport default TimeTable;\r\n\r\n/* \r\n[\r\n    {'first_list': \r\n        {4: \r\n            (\r\n                ('2023-05-01', 'Monday', '08:00:00'), \r\n*/\r\n","import React from \"react\";\r\n\r\nconst GroupCalContext = React.createContext();\r\n\r\nexport default GroupCalContext;\r\n"],"sourceRoot":""}