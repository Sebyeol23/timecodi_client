{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","app/groups/Group.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","Group","useState","show","setShow","handleClose","handleShow","memberList","id","content","checked","options","setOptions","handleOptions","event","newState","name","target","map","op","Number","className","aria-label","href","onClick","preventDefault","aria-current","style","height","overflowY","overflowX","onSubmit","console","log","el","idx","type","onChange","cursor","onHide","Header","closeButton","Title","Body","Footer"],"mappings":"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","file":"static/js/19.90a7ed97.chunk.js","sourcesContent":["import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import React, { useState } from \"react\";\nimport { Modal } from \"react-bootstrap\";\n\nfunction Group() {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  let members = [\"David Grey\", \"Stella Johnson\", \"Marina Michel\", \"John Doe\"];\n  let [memberList] = useState(members);\n\n  let [isVoteActive] = useState(true);\n  let [options, setOptions] = useState([\n    {\n      id: 1,\n      content: \"2023-04-25 14:00 ~ 16:00\",\n      checked: false,\n    },\n    {\n      id: 2,\n      content: \"2023-04-25 14:30 ~ 16:30\",\n      checked: false,\n    },\n    {\n      id: 3,\n      content: \"2023-04-25 15:00 ~ 17:00\",\n      checked: false,\n    },\n    {\n      id: 4,\n      content: \"2023-04-26 13:00 ~ 15:00\",\n      checked: false,\n    },\n  ]);\n  let handleOptions = (event) => {\n    let newState = [...options];\n    const { name } = event.target;\n    newState.map((op) => {\n      if (op.id === Number(name)) {\n        op.checked = true;\n      }\n    });\n    setOptions(newState);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(options);\n  };\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h3 className=\"page-title\">Group 1</h3>\n        <nav aria-label=\"breadcrumb\">\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\">\n              <a href=\"!#\" onClick={(event) => event.preventDefault()}>\n                Groups\n              </a>\n            </li>\n            <li className=\"breadcrumb-item active\" aria-current=\"page\">\n              Group 1\n            </li>\n          </ol>\n        </nav>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-4 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\" style={{ height: \"400px\" }}>\n              <h4 className=\"card-title\">\n                <i className=\"mdi mdi-bookmark-check\"></i> Upcoming Meeting\n              </h4>\n              <p className=\"card-description\">This is the next meeting info.</p>\n              <div className=\"table-responsive\">\n                <table className=\"table\">\n                  <tr>\n                    <th></th>\n                    <th>Content</th>\n                  </tr>\n                  <tr>\n                    <td className=\"font-weight-bold\">TITLE</td>\n                    <td>Band Practice</td>\n                  </tr>\n                  <tr>\n                    <td className=\"font-weight-bold\">WHEN</td>\n                    <td>2023년 4월 25일</td>\n                  </tr>\n                  <tr>\n                    <td className=\"font-weight-bold\">WHERE</td>\n                    <td>학생회관</td>\n                  </tr>\n                  <tr>\n                    <td className=\"font-weight-bold\">MEMO</td>\n                    <td>Bring your headphones:)</td>\n                  </tr>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-8 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div\n              className=\"card-body\"\n              style={{\n                height: \"400px\",\n                overflowY: \"auto\",\n                overflowX: \"hidden\",\n              }}\n            >\n              <h4 className=\"card-title\">\n                <i className=\"mdi mdi-poll\"></i> Vote\n              </h4>\n              <p className=\"card-description\">\n                Submit 버튼을 클릭하면 콘솔창에 출력됩니다. checked 항목 참고\n              </p>\n              <form onSubmit={handleSubmit}>\n                <div className=\"table-responsive\">\n                  <table className=\"table\">\n                    <tr>\n                      <th>#</th>\n                      <th>Time</th>\n                      <th>\n                        <i className=\"mdi mdi-checkbox-multiple-marked-outline\"></i>\n                      </th>\n                    </tr>\n                    {options.map(function (el, idx) {\n                      return (\n                        <tr>\n                          <td>{el.id}</td>\n                          <td>{el.content}</td>\n                          <td>\n                            <div className=\"form-check\">\n                              <label className=\"form-check-label\">\n                                <input\n                                  type=\"checkbox\"\n                                  className=\"form-check-input\"\n                                  checked={el.checked}\n                                  onChange={handleOptions}\n                                  name={el.id}\n                                />\n                                <i className=\"input-helper\"></i>\n                              </label>\n                            </div>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </table>\n                </div>\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-gradient-primary btn-block\"\n                >\n                  Submit\n                </button>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-12 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row\">\n                <div className=\"col-md-6\">\n                  <h4 className=\"card-title\">\n                    <i className=\"mdi mdi-calendar-multiple-check\"></i> Group\n                    Calender\n                  </h4>\n                  <p className=\"card-description\">Group Calender</p>\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\n                    <i className=\"mdi mdi-calendar-plus\"></i>\n                    Edit Meeting Info\n                  </button>\n                  <button type=\"button\" className=\"btn btn-secondary btn-lg\">\n                    <i className=\"mdi mdi-calendar-plus\"></i>\n                    Create New Meeting\n                  </button>\n                </div>\n                <div className=\"col-md-6\">\n                  <h4 className=\"card-title\">\n                    <i className=\"mdi mdi-timetable\"></i> TimeTable\n                  </h4>\n                  <p className=\"card-description\">TimeTable</p>\n                  <button type=\"button\" className=\"btn btn-primary btn-lg\">\n                    <i className=\"mdi mdi-calendar-plus\"></i>\n                    Edit My TimeTable\n                  </button>\n                  <button type=\"button\" className=\"btn btn-secondary btn-lg\">\n                    <i className=\"mdi mdi-calendar-plus\"></i>\n                    Create New Vote\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-6 grid-margin stretch-card\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">\n                <i className=\"mdi mdi-account\"></i> Members\n              </h4>\n              <p className=\"card-description\">Click member's name</p>\n              <div className=\"table-responsive\">\n                <table className=\"table\">\n                  <thead>\n                    <tr>\n                      <th> ID </th>\n                      <th> Name </th>\n                      <th> Actions </th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {memberList.map(function (el, idx) {\n                      return (\n                        <tr>\n                          <td>0</td>\n                          <td\n                            onClick={handleShow}\n                            style={{ cursor: \"pointer\" }}\n                          >\n                            {el}\n                          </td>\n                          <td>\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-inverse-success btn-sm\"\n                            >\n                              TimeTable\n                            </button>\n                            <button\n                              type=\"button\"\n                              className=\"btn btn-inverse-warning btn-sm\"\n                            >\n                              Add friend\n                            </button>\n                          </td>\n                        </tr>\n                      );\n                    })}\n                  </tbody>\n                </table>\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-gradient-primary btn-md btn-block\"\n              >\n                <i className=\"mdi mdi-account-plus\"></i>\n                Invite New Member\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"col-4 grid-margin\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">테스트용입니다</h4>\n              <button\n                type=\"button\"\n                className=\"btn btn-gradient-primary btn-lg btn-block\"\n                onClick={handleShow}\n              >\n                Launch demo modal\n              </button>\n              <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                  <Modal.Title>Modal heading</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                  Woohoo, you are reading this text in a modal! 테스트\n                </Modal.Body>\n                <Modal.Footer>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-gradient-secondary btn-lg btn-block\"\n                    onClick={handleClose}\n                  >\n                    Close\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-gradient-primary btn-lg btn-block\"\n                    onClick={handleClose}\n                  >\n                    Save Changes\n                  </button>\n                </Modal.Footer>\n              </Modal>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Group;\n"],"sourceRoot":""}